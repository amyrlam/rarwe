{{page-title @model.name " songs | Rock & Roll with Octane" replace=true}}

{{#if @model.songs.length}}
  <ul>
    {{#each @model.songs as |song|}}
      <li class="mb-2">
        {{song.title}}
        <span class="float-right">
          {{!-- Way to call components in Ember PascalCase. Pass in arguments with @, and HTML attributes w/o prefix e.g. `class="mt-4"` --}}
          {{!-- Pre Ember-3.4, called with curly braces e.g. `{{star-rating}}` see https://ember-learn.github.io/ember-octane-vs-classic-cheat-sheet/#component-templates__angle-brackets for more info --}}
          <StarRating 
            @rating={{song.rating}} 
            {{!-- Creates a setter function that sets `song.rating` to whatever value the fn is called with --}}
            @onUpdate={{set song "rating"}}
          />
        </span>
      </li>
    {{/each}}
  </ul>
{{else}}
  <p class="text-center">
    The band has no songs yet.
  </p>
{{/if}}
{{#if this.showAddSong}}
  <div class="flex justify-center mt-2">
    <button
      type="button"
      class="px-4 py-2 rounded bg-purple-600 shadow-md hover:shadow-lg hover:text-white hover:bg-purple-500 focus:outline-none"
      {{on "click" (set this "showAddSong" false)}}
    >
      Add song
    </button>
  </div>
{{else}}
  <div class="mt-6 flex">
    <label for="title" class="sr-only">Title</label>
    <input
      type="text"
      id="title"
      class="text-gray-800 bg-white rounded-md py-2 px-4"
      placeholder="Title"
      value={{this.title}}
      {{on "input" this.updateTitle}}
    />
    <button
      type="button"
      class="ml-4 px-4 py-2 rounded bg-purple-600 shadow-md hover:shadow-lg hover:text-white"
      {{on "click" this.saveSong}}
    >
      Save
    </button>
    <button
      type="button"
      class="ml-2 px-4 p-2 rounded bg-white border border-bg-purple-600 shadow-md text-purple-600 hover:shadow-lg"
      {{on "click" this.cancel}}
    >
      Cancel
    </button>
  </div>
{{/if}} 